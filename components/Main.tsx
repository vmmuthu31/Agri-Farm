import { useState, useEffect, useRef } from 'react'
import SocialLogin from '@biconomy/web3-auth'
import Link from "next/link";
import Image from "next/image";
import { ChainId } from '@biconomy/core-types'
import { IBalances } from '@biconomy/node-client'
import { ethers } from 'ethers'
import SmartAccount from '@biconomy/smart-account'
import { css } from '@emotion/css'
import truncateEthAddress from 'truncate-eth-address'
import Head from "next/head";
import { Dialog } from "@headlessui/react";
import { BsReverseLayoutTextSidebarReverse } from "react-icons/bs";
import { HiXMark } from "react-icons/hi2";

const navigation = [
  { name: "Home", href: "/" },
  { name: "Services", href: "/Tutorials" },
  { name: "Learn", href: "/Team" },
  { name: "Weather", href: "/Blog" },
];
export default function Home() {
  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);
  const [smartAccount, setSmartAccount] = useState<SmartAccount | null>(null)
  const [interval, enableInterval] = useState<boolean>(false)
  const sdkRef = useRef<SocialLogin | null>(null)
  const [loading, setLoading] = useState<boolean>(false)
  
  useEffect(() => {
    let configureLogin
    if (interval) {
      configureLogin = setInterval(() => {
        if (!!sdkRef.current?.provider) {
          setupSmartAccount()
          clearInterval(configureLogin)
        }
      }, 1000)
    }
  }, [interval])

  async function login() {
    if (!sdkRef.current) {
      const socialLoginSDK = new SocialLogin()    
      await socialLoginSDK.init(ethers.utils.hexValue(ChainId.POLYGON_MUMBAI))
      sdkRef.current = socialLoginSDK
    }
    if (!sdkRef.current.provider) {
      sdkRef.current.showConnectModal()
      sdkRef.current.showWallet()
      enableInterval(true)
    } else {
      setupSmartAccount()
    }
  }

  async function setupSmartAccount() {
    if (!sdkRef?.current?.provider) return
    sdkRef.current.hideWallet()
    setLoading(true)
    const web3Provider = new ethers.providers.Web3Provider(
      sdkRef.current.provider
    )
    try {
      const smartAccount = new SmartAccount(web3Provider, {
        activeNetworkId: ChainId.POLYGON_MUMBAI,
        supportedNetworksIds: [ChainId.GOERLI, ChainId.POLYGON_MAINNET, ChainId.POLYGON_MUMBAI],
      })
      await smartAccount.init()
      setSmartAccount(smartAccount)
      setLoading(false)
      getBalance(smartAccount)
    } catch (err) {
      console.log('error setting up smart account... ', err)
    }
  }

  const logout = async () => {
    if (!sdkRef.current) {
      console.error('Web3Modal not initialized.')
      return
    }
    await sdkRef.current.logout()
    sdkRef.current.hideWallet()
    setSmartAccount(null)
    enableInterval(false)
  }

  async function getBalance(smartAccount: SmartAccount) {
    if (!smartAccount) return
    console.log('smartAccount: ', smartAccount)
    /* this function fetches the balance of the connected smart wallet */
    const balanceParams =  {
      chainId: ChainId.POLYGON_MUMBAI,
      eoaAddress: smartAccount.address,
      tokenAddresses: [],
    }
    console.log('smartAccount: ', smartAccount)
  }

  return (
    <div className='bgimg'>
    <Head>
      <title>Agri Farm</title>
      <meta name="description" content="Generated by create next app" />
      <link rel="icon" href="https://static.vecteezy.com/system/resources/previews/008/515/085/original/farm-logo-green-logo-landscape-logo-vector.jpg" />
    </Head>
    <header>
    <div className="absolute inset-x-0 top-[-10rem] -z-10 transform-gpu overflow-hidden blur-3xl sm:top-[-20rem]">
      <svg
        className="relative left-[calc(50%-11rem)] -z-10 h-[21.1875rem] max-w-none -translate-x-1/2 rotate-[30deg] sm:left-[calc(50%-30rem)] sm:h-[42.375rem]"
        viewBox="0 0 1155 678"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          fill="url(#45de2b6b-92d5-4d68-a6a0-9b9b2abad533)"
          fillOpacity=".3"
          d="M317.219 518.975L203.852 678 0 438.341l317.219 80.634 204.172-286.402c1.307 132.337 45.083 346.658 209.733 145.248C936.936 126.058 882.053-94.234 1031.02 41.331c119.18 108.451 130.68 295.337 121.53 375.223L855 299l21.173 362.054-558.954-142.079z"
        />
        <defs>
          <linearGradient
            id="45de2b6b-92d5-4d68-a6a0-9b9b2abad533"
            x1="1155.49"
            x2="-78.208"
            y1=".177"
            y2="474.645"
            gradientUnits="userSpaceOnUse"
          >
            <stop stopColor="#9089FC" />
            <stop offset={1} stopColor="#FF80B5" />
          </linearGradient>
        </defs>
      </svg>
    </div>
    <div className="px-6 pt-6 lg:px-6">
      <div>
        <nav
          className="flex h-9 items-center justify-between"
          aria-label="Global"
        >
          <div className="flex lg:min-w-0 lg:flex-1" aria-label="Global">
            <img
              className=" w-20 py-4"
              src=""
            />

            <h1 className="h-8 py-7  text-3xl font-bold text-white">
              Agri Farm
            </h1>
          </div>
          <div className="flex lg:hidden">
            <button
              type="button"
              className="-m-2.5 inline-flex items-center justify-center rounded-md p-2.5 text-white"
              onClick={() => setMobileMenuOpen(true)}
            >
              <span className="sr-only">Open main menu</span>
              <BsReverseLayoutTextSidebarReverse className="h-6 w-6" />
            </button>
          </div>

          <div className="hidden lg:flex lg:min-w-0 lg:flex-1 lg:justify-end">
            <div className="hidden lg:flex lg:min-w-0 lg:flex-2 lg:justify-center lg:gap-x-3">
              {navigation.map((item) => (
                <Link
                  key={item.name}
                  href={item.href}
                  className="font-semibold px-3 py-3 text-white hover:text-white"
                >
                  {item.name}
                </Link>
              ))}
            </div>
            <div className="text-white  ">
            {
            loading && <p className='px-10'>Loading...</p>
            }
              {!!smartAccount && (
                   <p className='pl-5'>Smart account address:{truncateEthAddress(smartAccount.address)}</p>
              )}
            </div>
            {!!smartAccount ? (
              <button className="btn-grad ml-3 px-9 py-3" onClick={logout}>
                Logout
              </button>
            ) : (
              !smartAccount && !loading && <button className="btn-grad px-10 ml-5" onClick={login}>Login</button>
            )}
          </div>
        </nav>
        <Dialog as="div" open={mobileMenuOpen} onClose={setMobileMenuOpen}>
          <Dialog.Panel
            focus="true"
            className="fixed inset-0 z-10 overflow-y-auto bg-black px-6 py-6 lg:hidden"
          >
            <div className="flex h-9 items-center justify-between">
              <div className="flex">
                <a href="#" className="-m-1.5 p-1.5">
                  <img
                    className=" w-20 "
                    src="https://www.logoai.com/uploads/output/2022/02/26/13e0bbb1a265a0723712d18d25bb88b3.jpg"
                  />
                </a>
              </div>
              <div className="flex">
                <button
                  type="button"
                  className="-m-2.5 inline-flex items-center justify-center rounded-md p-2.5 text-white"
                  onClick={() => setMobileMenuOpen(false)}
                >
                  <span className="sr-only">Close menu</span>

                  <HiXMark className="h-6 w-6" aria-hidden="true" />
                </button>
              </div>
            </div>
            <div className="mt-6 flow-root">
              <div className="-my-6 divide-y divide-gray-500/10">
                <div className="space-y-2 py-6">
                  {navigation.map((item) => (
                    <Link
                      key={item.name}
                      href={item.href}
                      className="-mx-3 block rounded-lg py-3 px-3 text-base font-semibold leading-7 text-white hover:bg-gray-400/10"
                    >
                      {item.name}
                    </Link>
                  ))}
                </div>
              </div>
            </div>
          </Dialog.Panel>
        </Dialog>
      </div>
    </div>
    </header>
    <main>
      <div className="pt-5  sm:pt-16 lg:pt-6 lg:pb-11   lg:overflow-hidden">
        <div className="mx-auto max-w-7xl  lg:px-8">
          <div className="lg:grid lg:grid-cols-2  lg:gap-8">
            <div className="mx-auto max-w-md px-4 sm:max-w-2xl  sm:px-6 sm:text-center lg:px-0 lg:text-left lg:flex lg:items-center">
              <div className="lg:py-24">
                <h1 className="mt-4 text-4xl tracking-tight font-extrabold text-white sm:mt-5 sm:text-6xl lg:mt-6 xl:text-6xl">
                  <span className="block">Farming in </span>
                  <span className="block ">Web3</span>
                </h1>
                <p className="mt-3 text-base text-gray-300 sm:mt-5 sm:text-xl lg:text-lg xl:text-xl">
                  Anim aute id magna aliqua ad ad non deserunt sunt. Qui irure
                  qui Lorem cupidatat commodo. Elit sunt amet fugiat veniam
                  occaecat fugiat.
                </p>
                <div className="mt-10 sm:mt-12">
                  <form action="#" className="sm:max-w-xl sm:mx-auto lg:mx-0">
                    <div className="sm:flex">
                      <Link
                        href="/Tutorials"
                        type="submit"
                        className="btn-grad px-8 py-2"
                      >
                        Lets Dive in
                      </Link>
                    </div>
                    <p className="mt-3 text-sm text-gray-300 sm:mt-4">
                      Start your free 14-day trial, no credit card necessary.
                      By providing your email, you agree to our{" "}
                      <a href="#" className="font-medium text-white">
                        terms of service
                      </a>
                      .
                    </p>
                  </form>
                </div>
              </div>
            </div>
            <div className="mt-3 -mb-16 sm:-mb-48 lg:m-0  lg:relative">
              <div className="mx-auto max-w-md px-8 sm:max-w-1xl    lg:max-w-none lg:px-12">
                {/* Illustration taken from Lucid Illustrations: https://lucid.pixsellz.io/ */}
                {/* <img
                  alt="Dog"
                  className=" animme lg:absolute lg:max-w-3xl"
                  src=""
                /> */}
              </div>
            </div>
          </div>
        </div>
      </div>
    </main>
  </div>
  )
}

